/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { CreateErc721 } from "./CreateErc721";

export class CreateErc721Factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<CreateErc721> {
    return super.deploy(overrides || {}) as Promise<CreateErc721>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): CreateErc721 {
    return super.attach(address) as CreateErc721;
  }
  connect(signer: Signer): CreateErc721Factory {
    return super.connect(signer) as CreateErc721Factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CreateErc721 {
    return new Contract(address, _abi, signerOrProvider) as CreateErc721;
  }
}

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
      {
        internalType: "address",
        name: "seller_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "price_",
        type: "uint256",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "market",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "price",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "setBaseURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506005805460006004819055610100600160a81b031990911633610100021760ff19169091556040805160208101918290528290526200005591600a91906200005c565b506200013f565b8280546200006a9062000102565b90600052602060002090601f0160209004810192826200008e5760008555620000d9565b82601f10620000a957805160ff1916838001178555620000d9565b82800160010185558215620000d9579182015b82811115620000d9578251825591602001919060010190620000bc565b50620000e7929150620000eb565b5090565b5b80821115620000e75760008155600101620000ec565b6002810460018216806200011757607f821691505b602082108114156200013957634e487b7160e01b600052602260045260246000fd5b50919050565b6117b8806200014f6000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c806370a08231116100ad578063b88d4fde11610071578063b88d4fde14610238578063c87b56dd1461024b578063e3f16c7a1461025e578063e985e9c514610266578063f542033f1461027957610121565b806370a08231146101fa57806380f556051461020d57806395d89b4114610215578063a035b1fe1461021d578063a22cb4651461022557610121565b806318160ddd116100f457806318160ddd1461019957806323b872dd146101ae57806342842e0e146101c15780636352211e146101d45780636a627842146101e757610121565b806301ffc9a71461012657806306fdde031461014f578063081812fc14610164578063095ea7b314610184575b600080fd5b610139610134366004611071565b61028c565b60405161014691906111e6565b60405180910390f35b6101576102d4565b60405161014691906111f1565b610177610172366004611122565b610366565b6040516101469190611195565b610197610192366004611048565b6103b2565b005b6101a161044a565b6040516101469190611648565b6101976101bc366004610f5a565b610450565b6101976101cf366004610f5a565b610488565b6101776101e2366004611122565b6104a3565b6101a16101f5366004610f0e565b6104d8565b6101a1610208366004610f0e565b61057f565b6101776105c3565b6101576105d7565b6101a16105e6565b61019761023336600461100e565b6105ec565b610197610246366004610f95565b610602565b610157610259366004611122565b610641565b6101976106a6565b610139610274366004610f28565b610715565b6101976102873660046110a9565b610743565b60006001600160e01b031982166380ac58cd60e01b14806102bd57506001600160e01b03198216635b5e139f60e01b145b806102cc57506102cc826107c2565b90505b919050565b6060600080546102e3906116c0565b80601f016020809104026020016040519081016040528092919081815260200182805461030f906116c0565b801561035c5780601f106103315761010080835404028352916020019161035c565b820191906000526020600020905b81548152906001019060200180831161033f57829003601f168201915b5050505050905090565b6000610371826107db565b6103965760405162461bcd60e51b815260040161038d90611489565b60405180910390fd5b506000908152600960205260409020546001600160a01b031690565b60006103bd826104a3565b9050806001600160a01b0316836001600160a01b031614156103f15760405162461bcd60e51b815260040161038d90611524565b806001600160a01b03166104036107f8565b6001600160a01b0316148061041f575061041f816102746107f8565b61043b5760405162461bcd60e51b815260040161038d90611362565b61044583836107fc565b505050565b60045490565b61046161045b6107f8565b8261088c565b61047d5760405162461bcd60e51b815260040161038d90611565565b610445838383610911565b61044583838360405180602001604052806000815250610602565b6000818152600660205260408120546001600160a01b0316806102cc5760405162461bcd60e51b815260040161038d90611409565b60055460009061010090046001600160a01b0316331461050a5760405162461bcd60e51b815260040161038d90611618565b6000600454600161051b9190611651565b600081815260066020908152604080832080546001600160a01b0319166001600160a01b03891690811790915583526007825282208054600181018255908352908220018290556004805492935090610573836116fb565b90915550909392505050565b60006001600160a01b0382166105a75760405162461bcd60e51b815260040161038d906113bf565b506001600160a01b031660009081526008602052604090205490565b60055461010090046001600160a01b031681565b6060600180546102e3906116c0565b60025490565b6105fe6105f76107f8565b8383610a66565b5050565b61061361060d6107f8565b8361088c565b61062f5760405162461bcd60e51b815260040161038d90611565565b61063b84848484610b2b565b50505050565b606061064c826107db565b6106685760405162461bcd60e51b815260040161038d906114d5565b6000610672610b5e565b90508061067e84610b6d565b60405160200161068f929190611166565b604051602081830303815290604052915050919050565b6003546001600160a01b031633146106d05760405162461bcd60e51b815260040161038d906115b6565b6040805180820190915260208082527f68747470733a2f2f7777772e676f6f676c652e636f6d2f7365617263683f713d91810191825261071291600a91610dc8565b50565b6001600160a01b039182166000908152600b6020908152604080832093909416825291909152205460ff1690565b60055461010090046001600160a01b031633146107725760405162461bcd60e51b815260040161038d90611618565b8351610785906000906020870190610dc8565b508251610799906001906020860190610dc8565b50600380546001600160a01b0319166001600160a01b0393909316929092179091556002555050565b6001600160e01b031981166301ffc9a760e01b14919050565b6000908152600660205260409020546001600160a01b0316151590565b3390565b60055460ff1661081e5760405162461bcd60e51b815260040161038d90611452565b600081815260096020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610853826104a3565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000610897826107db565b6108b35760405162461bcd60e51b815260040161038d90611316565b60006108be836104a3565b9050806001600160a01b0316846001600160a01b031614806108e557506108e58185610715565b806109095750836001600160a01b03166108fe84610366565b6001600160a01b0316145b949350505050565b60055460ff166109335760405162461bcd60e51b815260040161038d906115e1565b826001600160a01b0316610946826104a3565b6001600160a01b03161461096c5760405162461bcd60e51b815260040161038d90611256565b6001600160a01b0382166109925760405162461bcd60e51b815260040161038d9061129b565b61099d838383610445565b6109a86000826107fc565b6001600160a01b03831660009081526008602052604081208054600192906109d190849061167d565b90915550506001600160a01b03821660009081526008602052604081208054600192906109ff908490611651565b909155505060008181526006602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4610445838383610445565b60055460ff16610a885760405162461bcd60e51b815260040161038d90611452565b816001600160a01b0316836001600160a01b03161415610aba5760405162461bcd60e51b815260040161038d906112df565b6001600160a01b038381166000818152600b602090815260408083209487168084529490915290819020805460ff1916851515179055517f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3190610b1e9085906111e6565b60405180910390a3505050565b610b36848484610911565b610b4284848484610c85565b61063b5760405162461bcd60e51b815260040161038d90611204565b6060600a80546102e3906116c0565b606081610b9257506040805180820190915260018152600360fc1b60208201526102cf565b8160005b8115610bb957610ba5816116fb565b9050610bb2600a83611669565b9150610b96565b60008167ffffffffffffffff811115610be257634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015610c0c576020820181803683370190505b5090505b841561090957610c2160018361167d565b9150610c2e600a86611716565b610c39906030611651565b60f81b818381518110610c5c57634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a905350610c7e600a86611669565b9450610c10565b6000610c9084610d97565b15610d8c57836001600160a01b031663150b7a02610cac6107f8565b8786866040518563ffffffff1660e01b8152600401610cce94939291906111a9565b602060405180830381600087803b158015610ce857600080fd5b505af1925050508015610d18575060408051601f3d908101601f19168201909252610d159181019061108d565b60015b610d72573d808015610d46576040519150601f19603f3d011682016040523d82523d6000602084013e610d4b565b606091505b508051610d6a5760405162461bcd60e51b815260040161038d90611204565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610909565b506001949350505050565b600080826001600160a01b0316803b806020016040519081016040528181526000908060200190933c511192915050565b828054610dd4906116c0565b90600052602060002090601f016020900481019282610df65760008555610e3c565b82601f10610e0f57805160ff1916838001178555610e3c565b82800160010185558215610e3c579182015b82811115610e3c578251825591602001919060010190610e21565b50610e48929150610e4c565b5090565b5b80821115610e485760008155600101610e4d565b600067ffffffffffffffff80841115610e7c57610e7c611756565b604051601f8501601f191681016020018281118282101715610ea057610ea0611756565b604052848152915081838501861015610eb857600080fd5b8484602083013760006020868301015250509392505050565b80356001600160a01b03811681146102cf57600080fd5b600082601f830112610ef8578081fd5b610f0783833560208501610e61565b9392505050565b600060208284031215610f1f578081fd5b610f0782610ed1565b60008060408385031215610f3a578081fd5b610f4383610ed1565b9150610f5160208401610ed1565b90509250929050565b600080600060608486031215610f6e578081fd5b610f7784610ed1565b9250610f8560208501610ed1565b9150604084013590509250925092565b60008060008060808587031215610faa578081fd5b610fb385610ed1565b9350610fc160208601610ed1565b925060408501359150606085013567ffffffffffffffff811115610fe3578182fd5b8501601f81018713610ff3578182fd5b61100287823560208401610e61565b91505092959194509250565b60008060408385031215611020578182fd5b61102983610ed1565b91506020830135801515811461103d578182fd5b809150509250929050565b6000806040838503121561105a578182fd5b61106383610ed1565b946020939093013593505050565b600060208284031215611082578081fd5b8135610f078161176c565b60006020828403121561109e578081fd5b8151610f078161176c565b600080600080608085870312156110be578384fd5b843567ffffffffffffffff808211156110d5578586fd5b6110e188838901610ee8565b955060208701359150808211156110f6578485fd5b5061110387828801610ee8565b93505061111260408601610ed1565b9396929550929360600135925050565b600060208284031215611133578081fd5b5035919050565b60008151808452611152816020860160208601611694565b601f01601f19169290920160200192915050565b60008351611178818460208801611694565b83519083019061118c818360208801611694565b01949350505050565b6001600160a01b0391909116815260200190565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906111dc9083018461113a565b9695505050505050565b901515815260200190565b600060208252610f07602083018461113a565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b60208082526025908201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060408201526437bbb732b960d91b606082015260800190565b60208082526024908201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646040820152637265737360e01b606082015260800190565b60208082526019908201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604082015260600190565b6020808252602c908201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860408201526b34b9ba32b73a103a37b5b2b760a11b606082015260800190565b60208082526038908201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760408201527f6e6572206e6f7220617070726f76656420666f7220616c6c0000000000000000606082015260800190565b6020808252602a908201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604082015269726f206164647265737360b01b606082015260800190565b60208082526029908201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460408201526832b73a103a37b5b2b760b91b606082015260800190565b60208082526019908201527f45786d656e744e46543a2063616e6e6f7420617070726f766500000000000000604082015260600190565b6020808252602c908201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860408201526b34b9ba32b73a103a37b5b2b760a11b606082015260800190565b6020808252602f908201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60408201526e3732bc34b9ba32b73a103a37b5b2b760891b606082015260800190565b60208082526021908201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656040820152603960f91b606082015260800190565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b60208082526011908201527029a2a62622a91d102327a92124a22222a760791b604082015260600190565b6020808252601a908201527f45786d656e744e46543a2063616e6e6f74207472616e73666572000000000000604082015260600190565b60208082526016908201527526a0a925a2aa282620a1a29d102327a92124a22222a760511b604082015260600190565b90815260200190565b600082198211156116645761166461172a565b500190565b60008261167857611678611740565b500490565b60008282101561168f5761168f61172a565b500390565b60005b838110156116af578181015183820152602001611697565b8381111561063b5750506000910152565b6002810460018216806116d457607f821691505b602082108114156116f557634e487b7160e01b600052602260045260246000fd5b50919050565b600060001982141561170f5761170f61172a565b5060010190565b60008261172557611725611740565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160e01b03198116811461071257600080fdfea26469706673582212208d1016470f48c1ee296714cab53389c89fe74ded4cf4ebf9b524d0aca7400dd164736f6c63430008000033";
